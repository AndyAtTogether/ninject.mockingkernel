<?xml version="1.0" encoding="utf-8"?>
<project name="Ninject" default="build">
	<property name="version" value="2.2.0.0" overwrite="true"/>
	<property name="product.name" value="Ninject.MockingKernel" overwrite="false"/>
	<property name="product.company" value="bbv Software Services AG" overwrite="false"/>
	<property name="product.duration" value="2009-2011" overwrite="false"/>
	<property name="product.description" value="Auto mocking kernel based on Ninject" overwrite="false"/>
	<property name="product.platforms" value="net-3.5,net-4.0,silverlight-4.0,silverlight-3.0,silverlight-2.0,silverlight-4.0-wp7,mono-2.0,netcf-3.5"  overwrite="false"/>
	<property name="product.buildserverPlatforms" value="net-3.5,net-4.0,silverlight-4.0,silverlight-3.0,silverlight-2.0,mono-2.0,netcf-3.5"  overwrite="false"/>
	<property name="dependencies" value="Ninject"  overwrite="false"/>

	<include buildfile="Ninject.include" />
	<target name="all" depends="core test silverlight-test"/>

	<target name="core" depends="init buildCore buildMoq buildRhinoMocks buildNSubstitute" />

	<target name="buildCore" depends="init">
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" 
			 output="${current.path.build}/${product.assembly}" doc="${current.path.build}/${product.docfile}" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
			</references>
		</csc>
	</target>
		
	<target name="buildMoq">
		<property name="product.assembly.moq" value="${product.name}.Moq.dll" overwrite="false"/>
		<property name="product.docfile.moq" value="${product.name}.Moq.xml" overwrite="false"/>
		<property name="current.path.lib.moq" value="${path.lib}/Moq/net35" unless="${string::contains(build.platform, 'silverlight') or string::contains(build.platform, 'net-4.0')}"/>
		<property name="current.path.lib.moq" value="${path.lib}/Moq/net40" unless="${string::contains(build.platform, 'silverlight')}" if="${string::contains(build.platform, 'net-4.0')}"/>
		<property name="current.path.lib.moq" value="${path.lib}/Moq/silverlight3" if="${string::contains(build.platform, 'silverlight')}" unless="${string::contains(build.platform, 'silverlight-4.0')}" />
		<property name="current.path.lib.moq" value="${path.lib}/Moq/silverlight4" if="${string::contains(build.platform, 'silverlight-4.0')}" />
		<copy todir="${current.path.build}/lib">
			<fileset basedir="${current.path.lib.moq}">
				<include name="**/*.dll"/>
				<include name="**/*.xml"/>
			</fileset>
		</copy>
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" 
			 output="${current.path.build}/${product.assembly.moq}" doc="${current.path.build}/${product.docfile.moq}" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}.Moq/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="${current.path.build}/${product.assembly}"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
				<include name="${current.path.lib.moq}/Moq.dll" unless="${string::contains(build.platform, 'silverlight')}"/>
				<include name="${current.path.lib.moq}/Moq.Silverlight.dll" if="${string::contains(build.platform, 'silverlight')}"/>
			</references>
		</csc>
	</target>
	
	<target name="buildRhinoMocks" unless="${string::contains(build.platform, 'silverlight')}">
		<property name="product.assembly.rhinomock" value="${product.name}.RhinoMock.dll" overwrite="false"/>
		<property name="product.docfile.rhinomock" value="${product.name}.RhinoMock.xml" overwrite="false"/>
		<property name="current.path.lib.rhinomocks" value="${path.lib}/RhinoMocks/net-3.5" unless="${string::contains(build.platform, 'silverlight')}" />
		<property name="current.path.lib.rhinomocks" value="${path.lib}/RhinoMocks/silverlight" if="${string::contains(build.platform, 'silverlight')}" />
		<copy todir="${current.path.build}/lib">
			<fileset basedir="${current.path.lib.rhinomocks}">
				<include name="**/*.dll"/>
				<include name="**/*.xml"/>
			</fileset>
		</copy>
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" 
			 output="${current.path.build}/${product.assembly.rhinomock}" doc="${current.path.build}/${product.docfile.rhinomock}" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}.RhinoMock/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="${current.path.build}/${product.assembly}"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
				<include name="${current.path.lib.rhinomocks}/Rhino.Mocks.dll" unless="${string::contains(build.platform, 'silverlight')}"/>
				<include name="${current.path.lib.rhinomocks}/Rhino.Mocks 3.5.Silverlight.dll" if="${string::contains(build.platform, 'silverlight')}"/>
			</references>
		</csc>	
	</target>

	<target name="buildNSubstitute" unless="${string::contains(build.platform, 'silverlight')}">
		<property name="product.assembly.nsubstitute" value="${product.name}.NSubstitute.dll" overwrite="false"/>
		<property name="product.docfile.nsubstitute" value="${product.name}.NSubstitute.xml" overwrite="false"/>
		<property name="current.path.lib.nsubstitute" value="${path.lib}/NSubstitute/net-3.5" />		
		<copy todir="${current.path.build}/lib">
			<fileset basedir="${current.path.lib.nsubstitute}">
				<include name="**/*.dll"/>
				<include name="**/*.xml"/>
			</fileset>
		</copy>
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" 
			 output="${current.path.build}/${product.assembly.nsubstitute}" doc="${current.path.build}/${product.docfile.nsubstitute}" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}.NSubstitute/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="${current.path.build}/${product.assembly}"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
				<include name="${current.path.lib.nsubstitute}/NSubstitute.dll"/>				
			</references>
		</csc>	
	</target>

	<target name="compile-tests" depends="core" unless="${skip.tests}" if="${not(string::contains(build.platform, 'silverlight') or build.platform == 'netcf-3.5')}">
		<mkdir dir="${current.path.test}"/>
		<copy todir="${current.path.test}" flatten="true">
			<fileset basedir="${current.path.build}">
				<include name="**/*.dll"/>
			</fileset>
		</copy>
		<copy todir="${current.path.test}">
			<fileset basedir="${path.tools.xunit}">
				<include name="xunit.dll"/>
				<include name="xunit.should.dll"/>
			</fileset>
		</copy>
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}"
		 output="${current.path.test}/${product.assembly.test}">
			<sources basedir="${path.src}">
				<include name="${product.name}.Test/**/*.cs"/>
				<include name="${product.name}.Moq.Test/**/*.cs"/>
				<include name="${product.name}.RhinoMock.Test/**/*.cs"/>
				<include name="${product.name}.NSubstitute.Test/**/*.cs"/>
				<exclude name="${product.name}.Moq.Test/Properties/*.cs"/>
				<exclude name="${product.name}.RhinoMock.Test/Properties/*.cs"/>
				<exclude name="${product.name}.NSubstitute.Test/Properties/*.cs"/>
			</sources>
			<references basedir="${current.path.test}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="Moq.dll"/>
				<include name="Rhino.Mocks.dll"/>
				<include name="NSubstitute.dll"/>
				<include name="xunit.dll"/>
				<include name="xunit.should.dll"/>
				<include name="${product.assembly}"/>
				<include name="${product.assembly.moq}"/>
				<include name="${product.assembly.rhinomock}"/>
				<include name="${product.assembly.nsubstitute}"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
			</references>
			<nowarn>
				<warning number="1584"/>
			</nowarn>
		</csc>
	</target>
	
	<target name="compile-silverlight-tests" depends="core" unless="${skip.tests or skip.silverlightTests}" if="${string::contains(build.platform, 'silverlight')}">
		<mkdir dir="${current.path.test}"/>
		<copy todir="${current.path.test}" flatten="true">
			<fileset basedir="${current.path.build}">
				<include name="**/*.dll"/>
			</fileset>
		</copy>
		<copy todir="${current.path.test}">
			<fileset basedir="${path.tools.unitdriven}">
				<include name="UnitDrivenLight.dll"/>
			</fileset>
		</copy>
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}"
		 output="${current.path.test}/${product.assembly.silverlighttestdll}">
			<sources basedir="${path.src}">
				<include name="${product.name}.Test/**/*.cs"/>
				<include name="${product.name}.Moq.Test/**/*.cs"/>
				<!--<include name="${product.name}.RhinoMock.Test/**/*.cs"/>-->
				<include name="${product.name}.SilverlightTests/*.cs"/>
				<exclude name="${product.name}.Test/MSTestAttributes/*.cs"/>
				<exclude name="${product.name}.Moq.Test/Properties/*.cs"/>
				<exclude name="${product.name}.RhinoMock.Test/Properties/*.cs"/>
			</sources>
			<references basedir="${current.path.test}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Windows.dll"/>
				<include name="System.Windows.Browser.dll"/>
				<include name="System.Net.dll"/>
				<include name="Moq.Silverlight.dll"/>
				<include name="Rhino.Mocks 3.5.Silverlight.dll"/>
				<include name="Castle.Core.dll" if="${string::contains(build.platform, 'silverlight-4.0')}"/>
				<include name="Castle.Core-Silverlight.dll" unless="${string::contains(build.platform, 'silverlight-4.0')}"/>
				<include name="Castle.DynamicProxy-Silverlight.dll" unless="${string::contains(build.platform, 'silverlight-4.0')}"/>
				<include name="UnitDrivenLight.dll"/>
				<include name="${product.assembly}"/>
				<include name="${product.assembly.moq}"/>
				<!--<include name="${product.assembly.rhinomock}"/>-->
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
			</references>
			<nowarn>
				<warning number="1584"/>
			</nowarn>
		</csc>
		<zip zipfile="${current.path.test}/${product.assembly.silverlighttest}">
			<fileset basedir="${current.path.test}">
				<include name="*.dll" />
			</fileset>
			<fileset basedir="${path.src}/${product.name}.SilverlightTests">
				<include name="AppManifest.xaml" if="${string::contains(build.platform, 'silverlight-4.0')}"/>
			</fileset>
			<fileset basedir="${path.src}/${product.name}.SilverlightTests/Silverlight3">
				<include name="AppManifest.xaml" unless="${string::contains(build.platform, 'silverlight-4.0')}"/>
			</fileset>
		</zip>
	</target>
</project>